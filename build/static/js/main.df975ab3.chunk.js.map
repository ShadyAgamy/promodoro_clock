{"version":3,"sources":["components/App.js","index.js"],"names":["formattedNumber","number","toLocaleString","minimumIntegerDigits","useGrouping","App","useState","breakLength","setBreakLength","breakMins","setBreakMins","breakSecs","setBreakSesc","sessionLength","setSessionLength","sessionMins","setSessionMins","sessionSecs","setSessionSesc","startTimer","setStartTimer","runBreak","setRunBreak","audio","useRef","unitDecreament","unit","updateValue","unitIncrement","useEffect","timer","setInterval","current","play","clearInterval","className","id","ref","src","type","onClick","icon","faArrowDown","faArrowUp","faPlay","faStop","pause","currentTime","faRotateLeft","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.df975ab3.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowDown, faArrowUp, faPlay, faStop, faRotateLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./styles.scss\";\r\n\r\n// formate one number to two digits formats e.g 1 => 01\r\nlet formattedNumber = (number) =>\r\n  number.toLocaleString(\"en-US\", {\r\n    minimumIntegerDigits: 2,\r\n    useGrouping: false,\r\n  });\r\n\r\nexport default function App() {\r\n  const [breakLength, setBreakLength] = useState(5);\r\n  const [breakMins, setBreakMins] = useState(breakLength);\r\n  const [breakSecs, setBreakSesc] = useState(0);\r\n  const [sessionLength, setSessionLength] = useState(25);\r\n  const [sessionMins, setSessionMins] = useState(sessionLength);\r\n  const [sessionSecs, setSessionSesc] = useState(0);\r\n\r\n  const [startTimer, setStartTimer] = useState(false);\r\n  const [runBreak, setRunBreak] = useState(false);\r\n\r\n  const audio = useRef(null);\r\n\r\n  const unitDecreament = (unit, updateValue) => {\r\n    unit === 1 ? updateValue(1) : updateValue(unit - 1);\r\n  };\r\n  const unitIncrement = (unit, updateValue) => {\r\n    unit === 60 ? updateValue(60) : updateValue(unit + 1);\r\n  };\r\n\r\n  const reset = () => {\r\n    setBreakLength(5);\r\n    setSessionLength(25);\r\n    setRunBreak(false);\r\n    setStartTimer(false);\r\n    setSessionMins(sessionLength);\r\n    setSessionSesc(0);\r\n    setBreakMins(breakLength);\r\n    setBreakSesc(0);\r\n    audio.current.pause();\r\n    audio.current.currentTime = 0;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSessionMins(sessionLength);\r\n    setSessionSesc(0);\r\n  }, [sessionLength]);\r\n\r\n  useEffect(() => {\r\n    setBreakMins(breakLength);\r\n    setBreakSesc(0);\r\n  }, [breakLength]);\r\n\r\n  // Session timer\r\n  useEffect(() => {\r\n    let timer;\r\n    if (startTimer) {\r\n      timer = setInterval(() => {\r\n        if (sessionMins === 0 && sessionSecs === 1) {\r\n          audio.current.play();\r\n        }\r\n        if (sessionMins === 0 && sessionSecs === 0) {\r\n          if (!runBreak) {\r\n            setBreakMins(breakLength);\r\n            setBreakSesc(0);\r\n          }\r\n          setRunBreak(true);\r\n          clearInterval(timer);\r\n        } else {\r\n          if (sessionSecs === 0) {\r\n            setSessionMins(sessionMins - 1);\r\n            setSessionSesc(59);\r\n          } else {\r\n            setSessionSesc(sessionSecs - 1);\r\n          }\r\n        }\r\n      }, 1000);\r\n    } else {\r\n      clearInterval(timer);\r\n    }\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [breakLength, sessionMins, sessionSecs, startTimer]);\r\n\r\n  // Break timer\r\n  useEffect(() => {\r\n    let timer;\r\n    if (startTimer && runBreak) {\r\n      timer = setInterval(() => {\r\n        if (breakMins === 0 && breakSecs === 0) {\r\n          audio.current.play();\r\n        }\r\n        if (breakMins === 0 && breakSecs === 0) {\r\n          setSessionMins(sessionLength);\r\n          setSessionSesc(0);\r\n          setRunBreak(false);\r\n          clearInterval(timer);\r\n        } else {\r\n          if (breakSecs === 0) {\r\n            setBreakMins(breakMins - 1);\r\n            setBreakSesc(59);\r\n          } else {\r\n            setBreakSesc(breakSecs - 1);\r\n          }\r\n        }\r\n      }, 1000);\r\n    }\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [breakMins, breakSecs, runBreak, sessionLength, startTimer]);\r\n\r\n  return (\r\n    <div className=\"promodoro_container\">\r\n      <audio id=\"beep\" ref={audio}>\r\n        <source src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\" type=\"audio/mpeg\" />\r\n      </audio>\r\n      <h2 className=\"title\">promodoro technique clock</h2>\r\n      <div className=\"clock_length_control\">\r\n        <div className=\"break_length\">\r\n          <h4 id=\"break-label\">Break Length</h4>\r\n          <div className=\"length_control_container\">\r\n            <span id=\"break-decrement\" onClick={() => unitDecreament(breakLength, setBreakLength)}>\r\n              <FontAwesomeIcon icon={faArrowDown} />\r\n            </span>\r\n            <span id=\"break-length\">{breakLength}</span>\r\n            <span id=\"break-increment\" onClick={() => unitIncrement(breakLength, setBreakLength)}>\r\n              <FontAwesomeIcon icon={faArrowUp} />\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"session_length\">\r\n          <h4 id=\"session-label\">Session Length</h4>\r\n          <div className=\"length_control_container\">\r\n            <span id=\"session-decrement\" onClick={() => unitDecreament(sessionLength, setSessionLength)}>\r\n              <FontAwesomeIcon icon={faArrowDown} />\r\n            </span>\r\n            <span id=\"session-length\">{sessionLength}</span>\r\n            <span id=\"session-increment\" onClick={() => unitIncrement(sessionLength, setSessionLength)}>\r\n              <FontAwesomeIcon icon={faArrowUp} />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"session_box\">\r\n        <h4 id=\"timer-label\">{runBreak ? \"Break\" : \"Session\"}</h4>\r\n        <span id=\"time-left\">{runBreak ? `${formattedNumber(breakMins)}:${formattedNumber(breakSecs)}` : `${formattedNumber(sessionMins)}:${formattedNumber(sessionSecs)}`}</span>\r\n      </div>\r\n      <div className=\"timerControl\">\r\n        <span id=\"start_stop\" onClick={() => setStartTimer(!startTimer)}>\r\n          <FontAwesomeIcon icon={faPlay} />\r\n          <FontAwesomeIcon icon={faStop} />\r\n        </span>\r\n        <span id=\"reset\" onClick={reset}>\r\n          <FontAwesomeIcon icon={faRotateLeft} />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}